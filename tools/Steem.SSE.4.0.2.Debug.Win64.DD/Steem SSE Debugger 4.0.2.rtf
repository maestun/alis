{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang6153\deflangfe6153{\fonttbl{\f0\fswiss\fprq2\fcharset0 Calibri Light;}{\f1\fswiss\fprq2\fcharset0 Calibri;}}
{\colortbl ;\red47\green84\blue150;\red31\green55\blue99;\red79\green129\blue189;}
{\stylesheet{ Normal;}{\s1 heading 1;}{\s2 heading 2;}{\s3 heading 3;}}
{\*\generator Riched20 10.0.19041}{\*\mmathPr\mdispDef1\mwrapIndent1440 }\viewkind4\uc1 
\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\b\f0\fs32\lang9 Steem Debugger: Power without the Price!\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\b0\f1\fs22 Steem Debugger is a powerful debugger for Atari ST programs. It is available only in Windows. It makes very good use of all Windows GUI possibilities. This is the work of Steem authors, the SSE version merely adds on it. The previous name was 'Boiler'.\par
There never was much documentation for the debugger. People using it are supposed to be familiar with debuggers and with the ST. This file will just present new features in the SSE version of Steem, added to help in the development of the "player" build of Steem or on request.\par
The archive contains only the program and those notes, it's up to you to put it in a folder with accessory files (DLL, ...).\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.4.0\par

\pard\keep\keepn\widctlpar\s2\sb40\sl252\slmult1\fs26 Copy code in clipboard\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 In an instruction or memory browser, if you right click on the 'Dump->' button, 500 bytes of ST RAM are copied or disassembled into the clipboard. Then you can paste wherever you want. This feature uses some code found on the internet.\par
\b Update\b0 : In later versions, #bytes depends on the figure beside 'Dump'.\par

\pard\keep\keepn\widctlpar\s2\sb40\sl252\slmult1\cf1\f0\fs26 Log\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 The log has been neglected in the SSE version. For example, border effects are not logged. \par
\b Update\b0 : We\rquote ve tried to put some traces back into steem.log but the preferred way is still trace.txt.\par

\pard\keep\keepn\widctlpar\s2\sb40\sl252\slmult1\cf1\f0\fs26 Trace\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 However an alternative 'Trace' system is used in the SSE version. You can command the output by selecting log options.\par
This parallel system was developed because I'm more familiar with it (TRACE(\'85))and I wanted it to work in the 'non-debugger', debug build of Visual C++, in the IDE output window or a file at choice.\par
Each time you quit the boiler, the traces are available in the file 'Trace.txt'. The file is also updated each time you stop emulation.\par
'Suspend logging' won't suspend the traces. This is commanded by the SSE option 'Output TRACE to file'.\par
\b Update\b0 : Trace to file option is now in Startup option page\par
For some aspects, it's not as detailed as Steem's original log.\par

\pard\keep\keepn\widctlpar\s3\sb40\sl252\slmult1\cf2\f0\fs24 IO\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 To obtain raw IO reads or writes, you need to:\par
Check Log option IO\par
Check the Log option corresponding to the devices you're interested in.\par
eg: Sound for the PSG\par
Check 'w' or 'r' in the Control Mask Browser (SSE option), line TRACE IO\par

\pard\keep\keepn\widctlpar\s2\sb40\sl252\slmult1\cf1\f0\fs26 OSD Info\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 I found it useful for my own needs, when some events happen a short string is displayed in yellow on the top left part of the screen, for example:\par
Trace       CPU is in trace mode (indicating some code protection)\par
\b Update\b0 : This is now commanded by the SSE option 'Control mask browser'.\par

\pard\keep\keepn\widctlpar\s2\sb40\sl252\slmult1\cf1\f0\fs26 ASSERT\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 Another Visual C++ classic, a message box will appear when an "assert" fails during execution, with the usual options. 'Abort' can spare you a crash, 'Ignore' will ignore all subsequent asserts (they will still be written in the trace file) until you reboot emulation, 'Retry' continues execution.\par
\b Update\b0 : most asserts have been disabled in v4 to reduce overhead.\par

\pard\keep\keepn\widctlpar\s2\sb40\sl252\slmult1\cf1\f0\fs26 Shifter tricks\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 Log section Video + Control mask browser Trace Shifter vbl\par
The mask, inspired by Hatari, currently is:\par

\pard\nowidctlpar\sa200  TRICK_LINE_PLUS_26=0x01, \par
 TRICK_LINE_PLUS_2=0x02, \par
 TRICK_HIRES_OVERSCAN=2, // used for software and hw overscan in monochrome\par
 TRICK_LINE_MINUS_106=0x04,\par
 TRICK_LINE_MINUS_2=0x08,\par
 TRICK_LINE_PLUS_44=0x10,\par
 TRICK_4BIT_SCROLL=0x20,\par
 TRICK_OVERSCAN_MED_RES=0x40,\par
 TRICK_BLACK_LINE=0x80,\par
 TRICK_TOP_OVERSCAN=0x100,\par
 TRICK_BOTTOM_OVERSCAN=0x200,\par
 TRICK_BOTTOM_OVERSCAN_60HZ=0x400,\par
 TRICK_LINE_PLUS_20=0x800,\par
 TRICK_0BYTE_LINE=0x1000,\par
 TRICK_STABILISER=0x2000,\par
 TRICK_80BYTE_LINE=0x4000, // don't assume a "no trick" colour line = 160byte\par
 TRICK_UNSTABLE=0x08000,\par
 TRICK_LINE_PLUS_24=0x10000,\par
 TRICK_LINE_PLUS_4=0x20000,\par
 TRICK_LINE_PLUS_6=0x40000,\par
 TRICK_NEO=0x80000//tests\par

\pard\nowidctlpar\sa200\sl276\slmult1 It is defined in emulator.h.\par
Plus & minus mean bytes more or less fetched in the video RAM.\par
Eg 'left off' = 'line +26'\par
Each time you stop emulation, a file 'frame_report.txt' is issued, giving a report of events and their timing for the last frame, scanline by scanline (palette, sync, shift mode, blitter...) with their timing. This helped me a lot. \par
It's always the same file used. You don't need to quit the debugger. \par
\b Update\b0 : What info is displayed is commanded in the SSE option 'Control mask browser'.\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.5.0\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 - removed DIV & Pasti log options (use FDC instead of Pasti), replaced with some new options\par
- some log options also work for TRACE.txt\par
The best developed are Crash, FDC, IKBD\par
New ones have been added:\par
Floppy data dumps all DMA transfers\par
Image info\par
IPF sector info\par
This needs to be reorganised\par
- 6301 trace now common with Steem (TRACE.txt)\par
- PSG filter option didn't work in Boiler\par
- improved message box (abort retry ignore)\par
- fixed autosave shifter tricks\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.5.3\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 - debug info as OSD - not optional, it's #define SS_OSD_DEBUG_MESSAGE, and is commanded by TRACE_OSD(...) (printf format)\par
- removed shortcut for 'save shifter tricks report' as this is done on each stop.\par
- OSD disk track info gives command in slow mode\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.5.4\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 - marginal improvements\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.6.0\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 For v3.6 there are more improvements simply because I needed a more powerful debugger to check some interesting bug reports.\par
- New menu title SSE\par
- SSE options are persistent\par
- "shifter_tricks": better res, sync values at start of frame\par
- "shifter_tricks": report video counter at start of every scanline with "fetching"\par
- better traces for hard disk (copied from Steem's own log)\par
- Keep CPU TRACE on if log is suspended (plus #define for not stopping the log anyway)\par
- OSD mentions 60hz frames\par
- Line, pixel and video counter on right click (yeah!)\par
- Wipe TRACE.txt too on option "Wipe Logfile"\par
- More useful reporting of Timer B\par
- Reverse video enabled timers (yeah!)\par
- remove useless 'a' and 'd' parameters (PSG sound filter)\par
- big register letters (question of taste)\par
- "other SP" renamed A7#2 and moved\par
- SR's hex value also given (before, only bits)\par
- Mouse wheel scrolling (yeah!)\par
Long requested I think, the mouse wheel will now scroll the memory and instruction browsers. Shift or left button command 'scroll page'. As an unexpected bonus, it also works in the main Boiler.\par
- Display current interrupt (yeah!)\par
It tries to figure out which interrupt if any is being executed when the Boiler is stopped.\par
MAIN means the CPU isn't executing an interrupt \par
OVF means 'Overflow', interrupts keep coming without corresponding RTE. This happens with a lot of programs that directly manipulate the stack. Even the TOS does it on bus error.\par
That's why Steem's original interrupt_depth variables quickly goes all the way.\par
For this reason, a click on the control will reset it if in overflow. If not, it will show previous interrupt. So much power!\par
We try to guess interrupt when "overflow", there's a '?' after the name of the interrupt in that case.\par
\b Update\b0 : It worked so well it was removed. Yeah!\par
- New options to mute PSG channels\par
- Display shifter draw pointer, shift mode and sync in timings page\par
- New option 'Run to RTS'\par
- Shortcut for blazing Step Over ("fast forward")\par
- OSD show gemdos command if log option 'Hard Disk' (new name for Stemdos) checked\par

\pard\keep\keepn\widctlpar\s2\sb40\sl252\slmult1\cf1\f0\fs26 Option 'Monitor: specific value'\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 When the option is checked, when you set a watch Steem will look at the 'find' box and interpret the string there as a condition. You must set the condition first. Only the last condition you typed in any memory browser counts: internally, there's only room for one by design.\par
One comparison character (=,!,<,>) is required. Value must be a WORD in hexadecimal, without $\par
You may for example type >0FFF, then click in the monitor column to add the watch.\par

\pard\keep\keepn\widctlpar\s2\sb40\sl252\slmult1\cf1\f0\fs26 Option 'Monitor: address range'\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 When this is checked, the first two watches will be considered as the limits of a range to check.\par
- New option '68030 stack frame'. It's interesting to check if programs are compatible with Falcon or TT computers. From Petari.\par
\b Update\b0 : It was removed because out of scope.\par
- New option 'Dump 6301 RAM' (for ROM it's a #define)\par
- Compute checksum of floppy disk boot sector (log Image info)\par
- OSD trace for HBI\par
- A series of new memory browsers, for ACIA, Blitter, shifter, Vectors\par
They're generally just pointers to the appropriate IO zone. Except the 6301 true emu browser, that points to the internal RAM of the 6301 chip.\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.6.1\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 -Fixes in 'monitor for value', should work better for .L writes now\par
-Instruction browsers called "Instructions", not "Memory"\par
-shifter_tricks now called FrameReport because it may be more than just the Shifter\par
-internal changes, making "Shifter events" "frame events", same reason\par

\pard\keep\keepn\widctlpar\s2\sb40\sl252\slmult1\cf1\f0\fs26 Boiler fake IO\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 Taking advantage of the impressive Boiler GUI to control some internal control masks as if they were part of the IO map.\par
This will maximize control while minimising code.\par
Option SSE/Control mask browser\par
This will control:\par
Frame Report (former shifter events)\par
OSD\par
Some TRACE (log section may still apply)\par
-transfer mute sound options to fake io\par
-transfer some log options to fake io\par
-User can choose a scanline to report events each frame.\par
Type value on left of 'Go' button and click button once.\par
OSD will also show shifter tricks for that line.\par
-Timers: show when timer B is used as line counter or not\par
-Display double register A7 as USP and SSP\par
-Display "other" A7 stack\par
Handy feature, in the SSE menu you may decide which version of A7=SP, USP or SSP will be displayed. As usual USP or SSP depends on supervisor bit.\par
-Improved floppy traces\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.6.2\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 -\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.6.3\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 -Boiler bugfix 'Control mask browser' keeps its name at reload\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.6.4\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 -Minor changes\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.7.0\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 - More options in control mask browser\par
  eg Mute sound: PSG noise, envelope; DMA\par
- Some debugging of IO R/W detection\par
- Fix crash if drag icon on boiler icon\par
- CPU Trace refactoring: "step" and "breakpoint" will work on the instruction being traced\par
- TRACE.txt: date and time of each runtime\par
-Far user-friendlier IO trace, you must also select chips you want to trace (MMU, MFP, Floppy, Shifter...) -> no more bloated TRACE\par
-Better CPU trace (with registers and stack if you want)\par
-Pseudo-stack based on interception of push/pop, recording only PC; no L/S; no right click yet\par
-Names of internal ST/TOS variables in low memory\par
-Show 'vectors' in the 'reg' column of memory browsers/boiler\par
eg: the address where the VBI routine starts, TB for timer B, ...\par
-Option to skip TOS exceptions\par
-More info in 'timings display', about cycles and MFP timers\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.7.1\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 -BLiT mentioned in instruction history\par
-flush TRACE.txt on stop\par
-do BLiT in step by step mode (dangerous fix?)\par
-Pseudo stack moved to SSE menu title\par
-Control mask browser: MFM traces\par
-Control mask browser: CPU traces cycles and value of memory held in address registers\par
-Remove 68030 stack frame, we emulate STF, STE, not the rest\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.7.2\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 -Monitor/log also in TRACE.txt + some debugging\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.7.3\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 -bugfix FDC IRQ trace was deactivated\par
-better separation FDC/image info trace\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.8.0\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 -new option to output a frame report on demand\par
-new interrupt browsers (caution! can crash if invalid address)\par
-timings in history list\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.8.1\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 -auto save frame report when using 'Go' to line\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.8.2\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 -Improved blit mode behaviour when tracing\par
-Don't redraw monochrome screen on stop/trace (Monoscreen, Time Slices...)\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.9.0\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 -New menu Log2 for still more options\par
-Restored log for shift and sync mode changes\par
-bugfix wrong CPU timings reported when "unrounding" happened\par
-bugfix spurious ST crash on logging monitored IO address (long standing, 3.2!)\par
-bugfix blit mode "better trace" broke Lethal Xcess\par
-trap logging in TRACE.txt (as in steem.log)\par
-Drive OSD: no image type anymore\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.9.1\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 - Blitter refactoring: hopefully there's no more interference with Boiler features (trace, breakpoint)?\par
- TRAP logging in TRACE.txt didn't work if logging was suspended\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.9.2\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 - Restore Blit starts during stepping (maybe... see 3.9.1 :))\par
- FrameReport: all values in hex, 2 letters codes possible (TB for Timer B)\par
- 68030 Stack Frame option available again\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.9.3\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 - Larger instruction window in trace\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v3.9.4\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 - A DirectDraw build is now available (again)\par
- CPU TRACE: controls to limit output (detect loops) and to display "before" values ("after" is apparently more trouble)\par
- Indicate IRQ in History\par
- Bugfix wrong stack display if upper byte of A7 isn't null\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v4.0.0\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 - "Boiler" renamed "Debugger"\par
- 64bit build available\par
- Emulator cycles (linecycles)\par
They have changed due to a better interrupt model!\par
In general, all timings are 8 cycles later except the HBL pending timing, still 0.\par
For STF WS1, they are 12 cycles later.\par
- Stop on Exception/Breakpoint/Monitoring: message in status bars instead of alert box\par
- Little redesign of Timings Display, pending MFP interrupt\par
- History List on Taskbar (optional, as browsers)\par
- Can dump History List to Trace.txt\par
- Optional longer History List (enough for a full frame)\par
- Breakpoint for Spurious interrupt\par
- New meta breakpoints: "missed" top/bottom overscan (many false alerts, use with care), 6301 reprogramming\par
- Fixed destructive 6301 ram dump\par
- Trace to file option is now in Startup option page, common for Regular & Debugger (*)\par
- Step by step Trace: values after instruction should now be correct (*)\par
- Removed "show interrupt" feature, it mostly didn't work\par
- 68030 Stack Frame option removed again (out of scope)\par
- IRQs: mfp irq mask (16bit), vbl (1byte), hbl (1byte)\par
- log trap: log all traps\par
- CPU TRACE: removed "detect loops"\par
(*) Trace to file and Step by step Trace are two totally different features!\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v4.0.1\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 - Don't disassemble instructions MOVEC, MOVE FROM CCR and RTD which are illegal on the MC68000 (other processors are not in the scope of Steem SSE).\par
- Fix possible crash when going from STF to STE TOS.\par
- Control mask browser TRACE CPU \b lim \b0 will now stop tracing after 10000 instructions  when checked (former default steem.log behaviour), and keep tracing going on when unchecked (former default TRACE.txt behaviour)\par
- Options to issue Steem's "old" log in the TRACE.txt file or "new" TRACE in steem.log.\par
\cf3\kerning32\b\f0\fs28\lang6153 R4\cf0\kerning0\b0\f1\fs22\lang9\par
- Monitor address wouldn't trigger on Blitter read or write\par
- IO traces of v3.9.4 were missing\par
\cf3\kerning32\b\f0\fs28\lang6153 R6\cf0\kerning0\b0\f1\fs22\lang9\par
- Fix history list dump\par

\pard\keep\keepn\widctlpar\s1\sb240\sl252\slmult1\cf1\f0\fs32 v4.0.2\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf0\f1\fs22 - Option 'Prompt on breakpoint'\par
This toggles between Steem 3 and Steem 4 behaviour for breakpoints and exceptions. An alert box or a message in both status bars.\par
- Fix mute PSG sound channel + add mute volume effects\par
- Fix bad STE sound of debugger (Antiques)\par
- Improved disassembly format (remove space before some .L)\par
- Option Uppercase applies to addresses and registers too\par
- Fix give video counter on right click (if \i lines\i0  checked in control mask browser)\par
\cf3\kerning32\b\f0\fs28\lang6153 R1\cf0\kerning0\b0\f1\fs22\lang9\par
Can log IO writes in Trace.txt\par
Fix R/W log wrong end of line in Trace.txt\par
Fix history window with few instructions\par
Monitor distinguish CPU and DMA R/W\par
\cf3\kerning32\b\f0\fs28\lang6153 R6\cf0\kerning0\b0\f1\fs22\lang9\par
Restore bus state after tracing an instruction\par
\cf3\kerning32\b\f0\fs28\lang6153 R8\cf0\kerning0\b0\f1\fs22\lang9\par
Adapt register case in MOVEM\par
Control mask browser: TRACE level to tune detail level (2 used on Stemdos for now)\par
Remove buggy pseudo stack feature\par
\cf3\kerning32\b\f0\fs28\lang6153 R9\cf0\kerning0\b0\f1\fs22\lang9\par
Don't trace io for debugger\par
\cf3\kerning32\b\f0\fs28\lang6153 R10-26\cf0\kerning0\b0\f1\fs22\lang9\par
Various fixes and bugs...\par
\cf3\kerning32\b\f0\fs28\lang6153 R27\cf0\kerning0\b0\f1\fs22\lang9\par
Fix debugger only shows IO registers if supervisor bit set\par
Displacements: try to have same format everywhere: + or - $\par
\par
\par
}
 